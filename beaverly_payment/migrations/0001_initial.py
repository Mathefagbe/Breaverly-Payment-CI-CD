# Generated by Django 4.2.13 on 2024-06-24 18:24

import beaverly_payment.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Withdrawals",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "customer_code",
                    models.CharField(db_index=True, max_length=100, null=True),
                ),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=100),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("NG", "NG"), ("USD", "USD")],
                        default="NG",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="widthdrawal",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TransactionHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(db_index=True, max_length=20, null=True),
                ),
                (
                    "receipt",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=beaverly_payment.models.TransactionHistory.upload_to,
                    ),
                ),
                (
                    "account_type",
                    models.CharField(
                        choices=[("CapySafe", "CapySafe"), ("CapyMax", "CapyMax")],
                        default="CapySafe",
                        max_length=30,
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("deposit", "Deposit"),
                            ("withdrawal", "Withdrawal"),
                            ("top_up", "Top_up"),
                            ("capyboost", "capyboost"),
                            ("sell_portfolio", "Sell_Portfolio"),
                            ("transfer", "Transfer"),
                        ],
                        default="deposit",
                        max_length=30,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("successful", "Successful"),
                            ("failed", "Failed"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("processing", "Processing"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=20),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("NG", "NG"), ("USD", "USD")],
                        default="NG",
                        max_length=20,
                    ),
                ),
                (
                    "payment_gateway",
                    models.CharField(
                        choices=[("bank_transfer", "Bank_Transfer"), ("card", "Card")],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "deposit_percentage",
                    models.FloatField(
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0.1),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "inital_deposit",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "pay_off_amount",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                ("contract_duration", models.IntegerField(null=True)),
                ("repayment_schedule", models.IntegerField(null=True)),
                (
                    "transaction_fee",
                    models.FloatField(
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100.0),
                        ],
                    ),
                ),
                ("expire_date", models.DateField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "initiated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PendingWithdrawals",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "customer_code",
                    models.CharField(db_index=True, max_length=100, null=True),
                ),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=100),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("NG", "NG"), ("USD", "USD")],
                        default="NG",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("successful", "Successful"),
                            ("failed", "Failed"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("processing", "Processing"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pending_widthdrawal",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CapySafeAccount",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "customer_code",
                    models.CharField(db_index=True, max_length=100, unique=True),
                ),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=100),
                ),
                (
                    "account_status",
                    models.CharField(
                        choices=[("ACTIVE", "Active"), ("INACTIVE", "Inactive")],
                        default="ACTIVE",
                        max_length=10,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("NG", "NG"), ("USD", "USD")],
                        default="NG",
                        max_length=10,
                    ),
                ),
                ("expire_date", models.DateField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CapyMaxAccount",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "customer_code",
                    models.CharField(
                        db_index=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=100),
                ),
                (
                    "account_status",
                    models.CharField(
                        choices=[("ACTIVE", "Active"), ("INACTIVE", "Inactive")],
                        default="ACTIVE",
                        max_length=10,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("NG", "NG"), ("USD", "USD")],
                        default="NG",
                        max_length=10,
                    ),
                ),
                ("expire_date", models.DateField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
